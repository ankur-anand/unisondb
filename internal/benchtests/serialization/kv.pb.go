// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: kv.proto

package serialization

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionStatePb int32

const (
	TransactionStatePb_TRANSACTION_STATE_PB_NONE    TransactionStatePb = 0
	TransactionStatePb_TRANSACTION_STATE_PB_BEGIN   TransactionStatePb = 1
	TransactionStatePb_TRANSACTION_STATE_PB_PREPARE TransactionStatePb = 2
	TransactionStatePb_TRANSACTION_STATE_PB_COMMIT  TransactionStatePb = 3
)

// Enum value maps for TransactionStatePb.
var (
	TransactionStatePb_name = map[int32]string{
		0: "TRANSACTION_STATE_PB_NONE",
		1: "TRANSACTION_STATE_PB_BEGIN",
		2: "TRANSACTION_STATE_PB_PREPARE",
		3: "TRANSACTION_STATE_PB_COMMIT",
	}
	TransactionStatePb_value = map[string]int32{
		"TRANSACTION_STATE_PB_NONE":    0,
		"TRANSACTION_STATE_PB_BEGIN":   1,
		"TRANSACTION_STATE_PB_PREPARE": 2,
		"TRANSACTION_STATE_PB_COMMIT":  3,
	}
)

func (x TransactionStatePb) Enum() *TransactionStatePb {
	p := new(TransactionStatePb)
	*p = x
	return p
}

func (x TransactionStatePb) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionStatePb) Descriptor() protoreflect.EnumDescriptor {
	return file_kv_proto_enumTypes[0].Descriptor()
}

func (TransactionStatePb) Type() protoreflect.EnumType {
	return &file_kv_proto_enumTypes[0]
}

func (x TransactionStatePb) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionStatePb.Descriptor instead.
func (TransactionStatePb) EnumDescriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{0}
}

type LogOperationTypePb int32

const (
	LogOperationTypePb_LOG_OPERATION_TYPE_PB_NO_OPERATION      LogOperationTypePb = 0
	LogOperationTypePb_LOG_OPERATION_TYPE_PB_INSERT            LogOperationTypePb = 1
	LogOperationTypePb_LOG_OPERATION_TYPE_PB_DELETE            LogOperationTypePb = 2
	LogOperationTypePb_LOG_OPERATION_TYPE_PB_TXN_MARKER        LogOperationTypePb = 3
	LogOperationTypePb_LOG_OPERATION_TYPE_PB_DELETE_ROW_BY_KEY LogOperationTypePb = 4
)

// Enum value maps for LogOperationTypePb.
var (
	LogOperationTypePb_name = map[int32]string{
		0: "LOG_OPERATION_TYPE_PB_NO_OPERATION",
		1: "LOG_OPERATION_TYPE_PB_INSERT",
		2: "LOG_OPERATION_TYPE_PB_DELETE",
		3: "LOG_OPERATION_TYPE_PB_TXN_MARKER",
		4: "LOG_OPERATION_TYPE_PB_DELETE_ROW_BY_KEY",
	}
	LogOperationTypePb_value = map[string]int32{
		"LOG_OPERATION_TYPE_PB_NO_OPERATION":      0,
		"LOG_OPERATION_TYPE_PB_INSERT":            1,
		"LOG_OPERATION_TYPE_PB_DELETE":            2,
		"LOG_OPERATION_TYPE_PB_TXN_MARKER":        3,
		"LOG_OPERATION_TYPE_PB_DELETE_ROW_BY_KEY": 4,
	}
)

func (x LogOperationTypePb) Enum() *LogOperationTypePb {
	p := new(LogOperationTypePb)
	*p = x
	return p
}

func (x LogOperationTypePb) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogOperationTypePb) Descriptor() protoreflect.EnumDescriptor {
	return file_kv_proto_enumTypes[1].Descriptor()
}

func (LogOperationTypePb) Type() protoreflect.EnumType {
	return &file_kv_proto_enumTypes[1]
}

func (x LogOperationTypePb) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogOperationTypePb.Descriptor instead.
func (LogOperationTypePb) EnumDescriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{1}
}

type LogEntryTypePb int32

const (
	LogEntryTypePb_LOG_ENTRY_TYPE_PB_KV      LogEntryTypePb = 0
	LogEntryTypePb_LOG_ENTRY_TYPE_PB_CHUNKED LogEntryTypePb = 1
	LogEntryTypePb_LOG_ENTRY_TYPE_PB_ROW     LogEntryTypePb = 2
)

// Enum value maps for LogEntryTypePb.
var (
	LogEntryTypePb_name = map[int32]string{
		0: "LOG_ENTRY_TYPE_PB_KV",
		1: "LOG_ENTRY_TYPE_PB_CHUNKED",
		2: "LOG_ENTRY_TYPE_PB_ROW",
	}
	LogEntryTypePb_value = map[string]int32{
		"LOG_ENTRY_TYPE_PB_KV":      0,
		"LOG_ENTRY_TYPE_PB_CHUNKED": 1,
		"LOG_ENTRY_TYPE_PB_ROW":     2,
	}
)

func (x LogEntryTypePb) Enum() *LogEntryTypePb {
	p := new(LogEntryTypePb)
	*p = x
	return p
}

func (x LogEntryTypePb) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogEntryTypePb) Descriptor() protoreflect.EnumDescriptor {
	return file_kv_proto_enumTypes[2].Descriptor()
}

func (LogEntryTypePb) Type() protoreflect.EnumType {
	return &file_kv_proto_enumTypes[2]
}

func (x LogEntryTypePb) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogEntryTypePb.Descriptor instead.
func (LogEntryTypePb) EnumDescriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{2}
}

type ColumnDataPb struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColumnDataPb) Reset() {
	*x = ColumnDataPb{}
	mi := &file_kv_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnDataPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnDataPb) ProtoMessage() {}

func (x *ColumnDataPb) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnDataPb.ProtoReflect.Descriptor instead.
func (*ColumnDataPb) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{0}
}

func (x *ColumnDataPb) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ColumnDataPb) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type RowUpdateEntryPb struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Columns       []*ColumnDataPb        `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowUpdateEntryPb) Reset() {
	*x = RowUpdateEntryPb{}
	mi := &file_kv_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowUpdateEntryPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowUpdateEntryPb) ProtoMessage() {}

func (x *RowUpdateEntryPb) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowUpdateEntryPb.ProtoReflect.Descriptor instead.
func (*RowUpdateEntryPb) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{1}
}

func (x *RowUpdateEntryPb) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *RowUpdateEntryPb) GetColumns() []*ColumnDataPb {
	if x != nil {
		return x.Columns
	}
	return nil
}

type RowUpdateEncodedPb struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowUpdateEncodedPb) Reset() {
	*x = RowUpdateEncodedPb{}
	mi := &file_kv_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowUpdateEncodedPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowUpdateEncodedPb) ProtoMessage() {}

func (x *RowUpdateEncodedPb) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowUpdateEncodedPb.ProtoReflect.Descriptor instead.
func (*RowUpdateEncodedPb) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{2}
}

func (x *RowUpdateEncodedPb) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type RowUpdateEntriesPb struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*RowUpdateEncodedPb  `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowUpdateEntriesPb) Reset() {
	*x = RowUpdateEntriesPb{}
	mi := &file_kv_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowUpdateEntriesPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowUpdateEntriesPb) ProtoMessage() {}

func (x *RowUpdateEntriesPb) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowUpdateEntriesPb.ProtoReflect.Descriptor instead.
func (*RowUpdateEntriesPb) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{3}
}

func (x *RowUpdateEntriesPb) GetEntries() []*RowUpdateEncodedPb {
	if x != nil {
		return x.Entries
	}
	return nil
}

type LogOperationDataPb struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*LogOperationDataPb_RowUpdateEntries
	Payload       isLogOperationDataPb_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogOperationDataPb) Reset() {
	*x = LogOperationDataPb{}
	mi := &file_kv_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogOperationDataPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogOperationDataPb) ProtoMessage() {}

func (x *LogOperationDataPb) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogOperationDataPb.ProtoReflect.Descriptor instead.
func (*LogOperationDataPb) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{4}
}

func (x *LogOperationDataPb) GetPayload() isLogOperationDataPb_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *LogOperationDataPb) GetRowUpdateEntries() *RowUpdateEntriesPb {
	if x != nil {
		if x, ok := x.Payload.(*LogOperationDataPb_RowUpdateEntries); ok {
			return x.RowUpdateEntries
		}
	}
	return nil
}

type isLogOperationDataPb_Payload interface {
	isLogOperationDataPb_Payload()
}

type LogOperationDataPb_RowUpdateEntries struct {
	RowUpdateEntries *RowUpdateEntriesPb `protobuf:"bytes,1,opt,name=row_update_entries,json=rowUpdateEntries,proto3,oneof"`
}

func (*LogOperationDataPb_RowUpdateEntries) isLogOperationDataPb_Payload() {}

type LogRecordPb struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Lsn             uint64                 `protobuf:"varint,1,opt,name=lsn,proto3" json:"lsn,omitempty"`
	Hlc             uint64                 `protobuf:"varint,2,opt,name=hlc,proto3" json:"hlc,omitempty"`
	Crc32Checksum   uint32                 `protobuf:"varint,3,opt,name=crc32_checksum,json=crc32Checksum,proto3" json:"crc32_checksum,omitempty"`
	OperationType   LogOperationTypePb     `protobuf:"varint,4,opt,name=operation_type,json=operationType,proto3,enum=serialization.LogOperationTypePb" json:"operation_type,omitempty"`
	TxnState        TransactionStatePb     `protobuf:"varint,5,opt,name=txn_state,json=txnState,proto3,enum=serialization.TransactionStatePb" json:"txn_state,omitempty"`
	EntryType       LogEntryTypePb         `protobuf:"varint,6,opt,name=entry_type,json=entryType,proto3,enum=serialization.LogEntryTypePb" json:"entry_type,omitempty"`
	TxnId           []byte                 `protobuf:"bytes,7,opt,name=txn_id,json=txnId,proto3" json:"txn_id,omitempty"`
	PrevTxnWalIndex []byte                 `protobuf:"bytes,8,opt,name=prev_txn_wal_index,json=prevTxnWalIndex,proto3" json:"prev_txn_wal_index,omitempty"`
	Payload         *LogOperationDataPb    `protobuf:"bytes,9,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LogRecordPb) Reset() {
	*x = LogRecordPb{}
	mi := &file_kv_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRecordPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRecordPb) ProtoMessage() {}

func (x *LogRecordPb) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRecordPb.ProtoReflect.Descriptor instead.
func (*LogRecordPb) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{5}
}

func (x *LogRecordPb) GetLsn() uint64 {
	if x != nil {
		return x.Lsn
	}
	return 0
}

func (x *LogRecordPb) GetHlc() uint64 {
	if x != nil {
		return x.Hlc
	}
	return 0
}

func (x *LogRecordPb) GetCrc32Checksum() uint32 {
	if x != nil {
		return x.Crc32Checksum
	}
	return 0
}

func (x *LogRecordPb) GetOperationType() LogOperationTypePb {
	if x != nil {
		return x.OperationType
	}
	return LogOperationTypePb_LOG_OPERATION_TYPE_PB_NO_OPERATION
}

func (x *LogRecordPb) GetTxnState() TransactionStatePb {
	if x != nil {
		return x.TxnState
	}
	return TransactionStatePb_TRANSACTION_STATE_PB_NONE
}

func (x *LogRecordPb) GetEntryType() LogEntryTypePb {
	if x != nil {
		return x.EntryType
	}
	return LogEntryTypePb_LOG_ENTRY_TYPE_PB_KV
}

func (x *LogRecordPb) GetTxnId() []byte {
	if x != nil {
		return x.TxnId
	}
	return nil
}

func (x *LogRecordPb) GetPrevTxnWalIndex() []byte {
	if x != nil {
		return x.PrevTxnWalIndex
	}
	return nil
}

func (x *LogRecordPb) GetPayload() *LogOperationDataPb {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_kv_proto protoreflect.FileDescriptor

var file_kv_proto_rawDesc = string([]byte{
	0x0a, 0x08, 0x6b, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x0c, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x5b, 0x0a, 0x10, 0x52, 0x6f, 0x77, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x62, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x22, 0x2a, 0x0a, 0x12, 0x52, 0x6f, 0x77, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x50, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x51, 0x0a, 0x12,
	0x52, 0x6f, 0x77, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x50, 0x62, 0x12, 0x3b, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x77, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x50, 0x62, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22,
	0x72, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x62, 0x12, 0x51, 0x0a, 0x12, 0x72, 0x6f, 0x77, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x6f, 0x77, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x50, 0x62, 0x48, 0x00, 0x52, 0x10, 0x72, 0x6f, 0x77, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0xa1, 0x03, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x50, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x6c, 0x73, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x6c, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x68, 0x6c, 0x63, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x63, 0x33, 0x32,
	0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x63, 0x72, 0x63, 0x33, 0x32, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x48,
	0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x62, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x74, 0x78, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x62, 0x52, 0x08,
	0x74, 0x78, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x62, 0x52, 0x09, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x78, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a,
	0x12, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x74, 0x78, 0x6e, 0x5f, 0x77, 0x61, 0x6c, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x54,
	0x78, 0x6e, 0x57, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x62, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2a, 0x96, 0x01, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x62, 0x12, 0x1d,
	0x0a, 0x19, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x50, 0x42, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1e, 0x0a,
	0x1a, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x50, 0x42, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x20, 0x0a,
	0x1c, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x50, 0x42, 0x5f, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x45, 0x10, 0x02, 0x12,
	0x1f, 0x0a, 0x1b, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x42, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x10, 0x03,
	0x2a, 0xd3, 0x01, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x62, 0x12, 0x26, 0x0a, 0x22, 0x4c, 0x4f, 0x47, 0x5f, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x42,
	0x5f, 0x4e, 0x4f, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12,
	0x20, 0x0a, 0x1c, 0x4c, 0x4f, 0x47, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x42, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x10,
	0x01, 0x12, 0x20, 0x0a, 0x1c, 0x4c, 0x4f, 0x47, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x42, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x45, 0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x4c, 0x4f, 0x47, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x42, 0x5f, 0x54, 0x58, 0x4e,
	0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x52, 0x10, 0x03, 0x12, 0x2b, 0x0a, 0x27, 0x4c, 0x4f, 0x47,
	0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x50, 0x42, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x4f, 0x57, 0x5f, 0x42, 0x59,
	0x5f, 0x4b, 0x45, 0x59, 0x10, 0x04, 0x2a, 0x64, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x62, 0x12, 0x18, 0x0a, 0x14, 0x4c, 0x4f, 0x47, 0x5f,
	0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x42, 0x5f, 0x4b, 0x56,
	0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x4c, 0x4f, 0x47, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x42, 0x5f, 0x43, 0x48, 0x55, 0x4e, 0x4b, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x19, 0x0a, 0x15, 0x4c, 0x4f, 0x47, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x4f, 0x57, 0x10, 0x02, 0x42, 0x43, 0x5a, 0x41,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x6b, 0x75, 0x72,
	0x2d, 0x61, 0x6e, 0x61, 0x6e, 0x64, 0x2f, 0x75, 0x6e, 0x69, 0x73, 0x6f, 0x6e, 0x64, 0x62, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_kv_proto_rawDescOnce sync.Once
	file_kv_proto_rawDescData []byte
)

func file_kv_proto_rawDescGZIP() []byte {
	file_kv_proto_rawDescOnce.Do(func() {
		file_kv_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kv_proto_rawDesc), len(file_kv_proto_rawDesc)))
	})
	return file_kv_proto_rawDescData
}

var file_kv_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_kv_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_kv_proto_goTypes = []any{
	(TransactionStatePb)(0),    // 0: serialization.TransactionStatePb
	(LogOperationTypePb)(0),    // 1: serialization.LogOperationTypePb
	(LogEntryTypePb)(0),        // 2: serialization.LogEntryTypePb
	(*ColumnDataPb)(nil),       // 3: serialization.ColumnDataPb
	(*RowUpdateEntryPb)(nil),   // 4: serialization.RowUpdateEntryPb
	(*RowUpdateEncodedPb)(nil), // 5: serialization.RowUpdateEncodedPb
	(*RowUpdateEntriesPb)(nil), // 6: serialization.RowUpdateEntriesPb
	(*LogOperationDataPb)(nil), // 7: serialization.LogOperationDataPb
	(*LogRecordPb)(nil),        // 8: serialization.LogRecordPb
}
var file_kv_proto_depIdxs = []int32{
	3, // 0: serialization.RowUpdateEntryPb.columns:type_name -> serialization.ColumnDataPb
	5, // 1: serialization.RowUpdateEntriesPb.entries:type_name -> serialization.RowUpdateEncodedPb
	6, // 2: serialization.LogOperationDataPb.row_update_entries:type_name -> serialization.RowUpdateEntriesPb
	1, // 3: serialization.LogRecordPb.operation_type:type_name -> serialization.LogOperationTypePb
	0, // 4: serialization.LogRecordPb.txn_state:type_name -> serialization.TransactionStatePb
	2, // 5: serialization.LogRecordPb.entry_type:type_name -> serialization.LogEntryTypePb
	7, // 6: serialization.LogRecordPb.payload:type_name -> serialization.LogOperationDataPb
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_kv_proto_init() }
func file_kv_proto_init() {
	if File_kv_proto != nil {
		return
	}
	file_kv_proto_msgTypes[4].OneofWrappers = []any{
		(*LogOperationDataPb_RowUpdateEntries)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kv_proto_rawDesc), len(file_kv_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kv_proto_goTypes,
		DependencyIndexes: file_kv_proto_depIdxs,
		EnumInfos:         file_kv_proto_enumTypes,
		MessageInfos:      file_kv_proto_msgTypes,
	}.Build()
	File_kv_proto = out.File
	file_kv_proto_goTypes = nil
	file_kv_proto_depIdxs = nil
}
