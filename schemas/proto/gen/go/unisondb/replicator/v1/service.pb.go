// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: unisondb/replicator/v1/service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Crc32Checksum uint32                 `protobuf:"fixed32,3,opt,name=crc32_checksum,json=crc32Checksum,proto3" json:"crc32_checksum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutRequest) Reset() {
	*x = PutRequest{}
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRequest) ProtoMessage() {}

func (x *PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRequest.ProtoReflect.Descriptor instead.
func (*PutRequest) Descriptor() ([]byte, []int) {
	return file_unisondb_replicator_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *PutRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *PutRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *PutRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *PutRequest) GetCrc32Checksum() uint32 {
	if x != nil {
		return x.Crc32Checksum
	}
	return 0
}

type PutStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KvPairs       []*PutRequest          `protobuf:"bytes,1,rep,name=kv_pairs,json=kvPairs,proto3" json:"kv_pairs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutStreamRequest) Reset() {
	*x = PutStreamRequest{}
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutStreamRequest) ProtoMessage() {}

func (x *PutStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutStreamRequest.ProtoReflect.Descriptor instead.
func (*PutStreamRequest) Descriptor() ([]byte, []int) {
	return file_unisondb_replicator_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *PutStreamRequest) GetKvPairs() []*PutRequest {
	if x != nil {
		return x.KvPairs
	}
	return nil
}

type PutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutResponse) Reset() {
	*x = PutResponse{}
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutResponse) ProtoMessage() {}

func (x *PutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutResponse.ProtoReflect.Descriptor instead.
func (*PutResponse) Descriptor() ([]byte, []int) {
	return file_unisondb_replicator_v1_service_proto_rawDescGZIP(), []int{2}
}

type PutStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutStreamResponse) Reset() {
	*x = PutStreamResponse{}
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutStreamResponse) ProtoMessage() {}

func (x *PutStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutStreamResponse.ProtoReflect.Descriptor instead.
func (*PutStreamResponse) Descriptor() ([]byte, []int) {
	return file_unisondb_replicator_v1_service_proto_rawDescGZIP(), []int{3}
}

type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_unisondb_replicator_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_unisondb_replicator_v1_service_proto_rawDescGZIP(), []int{5}
}

type DeleteStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deletes       []*DeleteRequest       `protobuf:"bytes,1,rep,name=deletes,proto3" json:"deletes,omitempty"` // List of keys to delete
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStreamRequest) Reset() {
	*x = DeleteStreamRequest{}
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStreamRequest) ProtoMessage() {}

func (x *DeleteStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStreamRequest.ProtoReflect.Descriptor instead.
func (*DeleteStreamRequest) Descriptor() ([]byte, []int) {
	return file_unisondb_replicator_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteStreamRequest) GetDeletes() []*DeleteRequest {
	if x != nil {
		return x.Deletes
	}
	return nil
}

type DeleteStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStreamResponse) Reset() {
	*x = DeleteStreamResponse{}
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStreamResponse) ProtoMessage() {}

func (x *DeleteStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStreamResponse.ProtoReflect.Descriptor instead.
func (*DeleteStreamResponse) Descriptor() ([]byte, []int) {
	return file_unisondb_replicator_v1_service_proto_rawDescGZIP(), []int{7}
}

type PutStreamChunksForKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to RequestType:
	//
	//	*PutStreamChunksForKeyRequest_StartMarker
	//	*PutStreamChunksForKeyRequest_CommitMarker
	//	*PutStreamChunksForKeyRequest_Chunk
	RequestType   isPutStreamChunksForKeyRequest_RequestType `protobuf_oneof:"request_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutStreamChunksForKeyRequest) Reset() {
	*x = PutStreamChunksForKeyRequest{}
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutStreamChunksForKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutStreamChunksForKeyRequest) ProtoMessage() {}

func (x *PutStreamChunksForKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutStreamChunksForKeyRequest.ProtoReflect.Descriptor instead.
func (*PutStreamChunksForKeyRequest) Descriptor() ([]byte, []int) {
	return file_unisondb_replicator_v1_service_proto_rawDescGZIP(), []int{8}
}

func (x *PutStreamChunksForKeyRequest) GetRequestType() isPutStreamChunksForKeyRequest_RequestType {
	if x != nil {
		return x.RequestType
	}
	return nil
}

func (x *PutStreamChunksForKeyRequest) GetStartMarker() *ChunkStartMarker {
	if x != nil {
		if x, ok := x.RequestType.(*PutStreamChunksForKeyRequest_StartMarker); ok {
			return x.StartMarker
		}
	}
	return nil
}

func (x *PutStreamChunksForKeyRequest) GetCommitMarker() *ChunkCommitMarker {
	if x != nil {
		if x, ok := x.RequestType.(*PutStreamChunksForKeyRequest_CommitMarker); ok {
			return x.CommitMarker
		}
	}
	return nil
}

func (x *PutStreamChunksForKeyRequest) GetChunk() *ChunkPutValue {
	if x != nil {
		if x, ok := x.RequestType.(*PutStreamChunksForKeyRequest_Chunk); ok {
			return x.Chunk
		}
	}
	return nil
}

type isPutStreamChunksForKeyRequest_RequestType interface {
	isPutStreamChunksForKeyRequest_RequestType()
}

type PutStreamChunksForKeyRequest_StartMarker struct {
	StartMarker *ChunkStartMarker `protobuf:"bytes,1,opt,name=start_marker,json=startMarker,proto3,oneof"`
}

type PutStreamChunksForKeyRequest_CommitMarker struct {
	CommitMarker *ChunkCommitMarker `protobuf:"bytes,2,opt,name=commit_marker,json=commitMarker,proto3,oneof"`
}

type PutStreamChunksForKeyRequest_Chunk struct {
	Chunk *ChunkPutValue `protobuf:"bytes,3,opt,name=chunk,proto3,oneof"`
}

func (*PutStreamChunksForKeyRequest_StartMarker) isPutStreamChunksForKeyRequest_RequestType() {}

func (*PutStreamChunksForKeyRequest_CommitMarker) isPutStreamChunksForKeyRequest_RequestType() {}

func (*PutStreamChunksForKeyRequest_Chunk) isPutStreamChunksForKeyRequest_RequestType() {}

type ChunkStartMarker struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkStartMarker) Reset() {
	*x = ChunkStartMarker{}
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkStartMarker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkStartMarker) ProtoMessage() {}

func (x *ChunkStartMarker) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkStartMarker.ProtoReflect.Descriptor instead.
func (*ChunkStartMarker) Descriptor() ([]byte, []int) {
	return file_unisondb_replicator_v1_service_proto_rawDescGZIP(), []int{9}
}

func (x *ChunkStartMarker) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type ChunkPutValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Crc32Checksum uint32                 `protobuf:"fixed32,2,opt,name=crc32_checksum,json=crc32Checksum,proto3" json:"crc32_checksum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkPutValue) Reset() {
	*x = ChunkPutValue{}
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkPutValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkPutValue) ProtoMessage() {}

func (x *ChunkPutValue) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkPutValue.ProtoReflect.Descriptor instead.
func (*ChunkPutValue) Descriptor() ([]byte, []int) {
	return file_unisondb_replicator_v1_service_proto_rawDescGZIP(), []int{10}
}

func (x *ChunkPutValue) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ChunkPutValue) GetCrc32Checksum() uint32 {
	if x != nil {
		return x.Crc32Checksum
	}
	return 0
}

type ChunkCommitMarker struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	FinalCrc32Checksum uint32                 `protobuf:"fixed32,1,opt,name=final_crc32_checksum,json=finalCrc32Checksum,proto3" json:"final_crc32_checksum,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChunkCommitMarker) Reset() {
	*x = ChunkCommitMarker{}
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkCommitMarker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkCommitMarker) ProtoMessage() {}

func (x *ChunkCommitMarker) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkCommitMarker.ProtoReflect.Descriptor instead.
func (*ChunkCommitMarker) Descriptor() ([]byte, []int) {
	return file_unisondb_replicator_v1_service_proto_rawDescGZIP(), []int{11}
}

func (x *ChunkCommitMarker) GetFinalCrc32Checksum() uint32 {
	if x != nil {
		return x.FinalCrc32Checksum
	}
	return 0
}

type PutStreamChunksForKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutStreamChunksForKeyResponse) Reset() {
	*x = PutStreamChunksForKeyResponse{}
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutStreamChunksForKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutStreamChunksForKeyResponse) ProtoMessage() {}

func (x *PutStreamChunksForKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutStreamChunksForKeyResponse.ProtoReflect.Descriptor instead.
func (*PutStreamChunksForKeyResponse) Descriptor() ([]byte, []int) {
	return file_unisondb_replicator_v1_service_proto_rawDescGZIP(), []int{12}
}

type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_unisondb_replicator_v1_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type GetResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Data               []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Chunked            bool                   `protobuf:"varint,2,opt,name=chunked,proto3" json:"chunked,omitempty"`
	FinalCrc32Checksum uint32                 `protobuf:"fixed32,3,opt,name=final_crc32_checksum,json=finalCrc32Checksum,proto3" json:"final_crc32_checksum,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_replicator_v1_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_unisondb_replicator_v1_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetResponse) GetChunked() bool {
	if x != nil {
		return x.Chunked
	}
	return false
}

func (x *GetResponse) GetFinalCrc32Checksum() uint32 {
	if x != nil {
		return x.FinalCrc32Checksum
	}
	return 0
}

var File_unisondb_replicator_v1_service_proto protoreflect.FileDescriptor

var file_unisondb_replicator_v1_service_proto_rawDesc = string([]byte{
	0x0a, 0x24, 0x75, 0x6e, 0x69, 0x73, 0x6f, 0x6e, 0x64, 0x62, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x6b, 0x76, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d,
	0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x95, 0x01, 0x0a, 0x0a, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x63, 0x33, 0x32, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0d, 0x63, 0x72, 0x63, 0x33, 0x32,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0x52, 0x0a, 0x10, 0x50, 0x75, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x08,
	0x6b, 0x76, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6b, 0x76, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x07, 0x6b, 0x76, 0x50, 0x61, 0x69, 0x72, 0x73, 0x22, 0x0d, 0x0a, 0x0b,
	0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x50,
	0x75, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x21, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x6b, 0x76, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x22, 0x16,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x1c, 0x50, 0x75, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x46, 0x6f, 0x72, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x6b, 0x76, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x6b, 0x76, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x05, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6b, 0x76, 0x61, 0x6c,
	0x63, 0x68, 0x65, 0x6d, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x50, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x48, 0x00, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x42, 0x0e, 0x0a, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x24, 0x0a, 0x10, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x22, 0x4c, 0x0a, 0x0d, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x50, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x63, 0x33, 0x32,
	0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52,
	0x0d, 0x63, 0x72, 0x63, 0x33, 0x32, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0x45,
	0x0a, 0x11, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x72, 0x63,
	0x33, 0x32, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x07, 0x52, 0x12, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x72, 0x63, 0x33, 0x32, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0x1f, 0x0a, 0x1d, 0x50, 0x75, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x46, 0x6f, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x6d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x72, 0x63,
	0x33, 0x32, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x07, 0x52, 0x12, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x72, 0x63, 0x33, 0x32, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x32, 0xa2, 0x04, 0x0a, 0x13, 0x4b, 0x56, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a,
	0x03, 0x50, 0x75, 0x74, 0x12, 0x23, 0x2e, 0x6b, 0x76, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x79,
	0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6b, 0x76, 0x61, 0x6c,
	0x63, 0x68, 0x65, 0x6d, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x64, 0x0a, 0x09, 0x50, 0x75, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x29, 0x2e, 0x6b,
	0x76, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6b, 0x76, 0x61, 0x6c, 0x63, 0x68,
	0x65, 0x6d, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x28, 0x01, 0x12, 0x88, 0x01, 0x0a, 0x15, 0x50, 0x75, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x46, 0x6f, 0x72, 0x4b, 0x65, 0x79, 0x12,
	0x35, 0x2e, 0x6b, 0x76, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x46, 0x6f, 0x72, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6b, 0x76, 0x61, 0x6c, 0x63, 0x68, 0x65,
	0x6d, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x75, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73,
	0x46, 0x6f, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01,
	0x12, 0x59, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x6b, 0x76, 0x61,
	0x6c, 0x63, 0x68, 0x65, 0x6d, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6b, 0x76, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x79, 0x2e, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2c, 0x2e, 0x6b, 0x76,
	0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6b, 0x76, 0x61, 0x6c,
	0x63, 0x68, 0x65, 0x6d, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x32, 0x68, 0x0a, 0x12, 0x4b, 0x56,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x52, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x23, 0x2e, 0x6b, 0x76, 0x61, 0x6c, 0x63, 0x68,
	0x65, 0x6d, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6b,
	0x76, 0x61, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x30, 0x01, 0x42, 0x4d, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x6b, 0x75, 0x72, 0x2d, 0x61, 0x6e, 0x61, 0x6e, 0x64, 0x2f, 0x75,
	0x6e, 0x69, 0x73, 0x6f, 0x6e, 0x64, 0x62, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x75, 0x6e, 0x69,
	0x73, 0x6f, 0x6e, 0x64, 0x62, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_unisondb_replicator_v1_service_proto_rawDescOnce sync.Once
	file_unisondb_replicator_v1_service_proto_rawDescData []byte
)

func file_unisondb_replicator_v1_service_proto_rawDescGZIP() []byte {
	file_unisondb_replicator_v1_service_proto_rawDescOnce.Do(func() {
		file_unisondb_replicator_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_unisondb_replicator_v1_service_proto_rawDesc), len(file_unisondb_replicator_v1_service_proto_rawDesc)))
	})
	return file_unisondb_replicator_v1_service_proto_rawDescData
}

var file_unisondb_replicator_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_unisondb_replicator_v1_service_proto_goTypes = []any{
	(*PutRequest)(nil),                    // 0: kvalchemy.replicator.v1.PutRequest
	(*PutStreamRequest)(nil),              // 1: kvalchemy.replicator.v1.PutStreamRequest
	(*PutResponse)(nil),                   // 2: kvalchemy.replicator.v1.PutResponse
	(*PutStreamResponse)(nil),             // 3: kvalchemy.replicator.v1.PutStreamResponse
	(*DeleteRequest)(nil),                 // 4: kvalchemy.replicator.v1.DeleteRequest
	(*DeleteResponse)(nil),                // 5: kvalchemy.replicator.v1.DeleteResponse
	(*DeleteStreamRequest)(nil),           // 6: kvalchemy.replicator.v1.DeleteStreamRequest
	(*DeleteStreamResponse)(nil),          // 7: kvalchemy.replicator.v1.DeleteStreamResponse
	(*PutStreamChunksForKeyRequest)(nil),  // 8: kvalchemy.replicator.v1.PutStreamChunksForKeyRequest
	(*ChunkStartMarker)(nil),              // 9: kvalchemy.replicator.v1.ChunkStartMarker
	(*ChunkPutValue)(nil),                 // 10: kvalchemy.replicator.v1.ChunkPutValue
	(*ChunkCommitMarker)(nil),             // 11: kvalchemy.replicator.v1.ChunkCommitMarker
	(*PutStreamChunksForKeyResponse)(nil), // 12: kvalchemy.replicator.v1.PutStreamChunksForKeyResponse
	(*GetRequest)(nil),                    // 13: kvalchemy.replicator.v1.GetRequest
	(*GetResponse)(nil),                   // 14: kvalchemy.replicator.v1.GetResponse
	(*timestamppb.Timestamp)(nil),         // 15: google.protobuf.Timestamp
}
var file_unisondb_replicator_v1_service_proto_depIdxs = []int32{
	15, // 0: kvalchemy.replicator.v1.PutRequest.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 1: kvalchemy.replicator.v1.PutStreamRequest.kv_pairs:type_name -> kvalchemy.replicator.v1.PutRequest
	4,  // 2: kvalchemy.replicator.v1.DeleteStreamRequest.deletes:type_name -> kvalchemy.replicator.v1.DeleteRequest
	9,  // 3: kvalchemy.replicator.v1.PutStreamChunksForKeyRequest.start_marker:type_name -> kvalchemy.replicator.v1.ChunkStartMarker
	11, // 4: kvalchemy.replicator.v1.PutStreamChunksForKeyRequest.commit_marker:type_name -> kvalchemy.replicator.v1.ChunkCommitMarker
	10, // 5: kvalchemy.replicator.v1.PutStreamChunksForKeyRequest.chunk:type_name -> kvalchemy.replicator.v1.ChunkPutValue
	0,  // 6: kvalchemy.replicator.v1.KVStoreWriteService.Put:input_type -> kvalchemy.replicator.v1.PutRequest
	1,  // 7: kvalchemy.replicator.v1.KVStoreWriteService.PutStream:input_type -> kvalchemy.replicator.v1.PutStreamRequest
	8,  // 8: kvalchemy.replicator.v1.KVStoreWriteService.PutStreamChunksForKey:input_type -> kvalchemy.replicator.v1.PutStreamChunksForKeyRequest
	4,  // 9: kvalchemy.replicator.v1.KVStoreWriteService.Delete:input_type -> kvalchemy.replicator.v1.DeleteRequest
	6,  // 10: kvalchemy.replicator.v1.KVStoreWriteService.DeleteStream:input_type -> kvalchemy.replicator.v1.DeleteStreamRequest
	13, // 11: kvalchemy.replicator.v1.KVStoreReadService.Get:input_type -> kvalchemy.replicator.v1.GetRequest
	2,  // 12: kvalchemy.replicator.v1.KVStoreWriteService.Put:output_type -> kvalchemy.replicator.v1.PutResponse
	3,  // 13: kvalchemy.replicator.v1.KVStoreWriteService.PutStream:output_type -> kvalchemy.replicator.v1.PutStreamResponse
	12, // 14: kvalchemy.replicator.v1.KVStoreWriteService.PutStreamChunksForKey:output_type -> kvalchemy.replicator.v1.PutStreamChunksForKeyResponse
	5,  // 15: kvalchemy.replicator.v1.KVStoreWriteService.Delete:output_type -> kvalchemy.replicator.v1.DeleteResponse
	7,  // 16: kvalchemy.replicator.v1.KVStoreWriteService.DeleteStream:output_type -> kvalchemy.replicator.v1.DeleteStreamResponse
	14, // 17: kvalchemy.replicator.v1.KVStoreReadService.Get:output_type -> kvalchemy.replicator.v1.GetResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_unisondb_replicator_v1_service_proto_init() }
func file_unisondb_replicator_v1_service_proto_init() {
	if File_unisondb_replicator_v1_service_proto != nil {
		return
	}
	file_unisondb_replicator_v1_service_proto_msgTypes[8].OneofWrappers = []any{
		(*PutStreamChunksForKeyRequest_StartMarker)(nil),
		(*PutStreamChunksForKeyRequest_CommitMarker)(nil),
		(*PutStreamChunksForKeyRequest_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_unisondb_replicator_v1_service_proto_rawDesc), len(file_unisondb_replicator_v1_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_unisondb_replicator_v1_service_proto_goTypes,
		DependencyIndexes: file_unisondb_replicator_v1_service_proto_depIdxs,
		MessageInfos:      file_unisondb_replicator_v1_service_proto_msgTypes,
	}.Build()
	File_unisondb_replicator_v1_service_proto = out.File
	file_unisondb_replicator_v1_service_proto_goTypes = nil
	file_unisondb_replicator_v1_service_proto_depIdxs = nil
}
