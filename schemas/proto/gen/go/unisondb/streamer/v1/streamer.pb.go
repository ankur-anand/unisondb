// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: unisondb/streamer/v1/streamer.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamWalRecordsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Last applied WAL checkpoint offset.
	Offset        []byte `protobuf:"bytes,1,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamWalRecordsRequest) Reset() {
	*x = StreamWalRecordsRequest{}
	mi := &file_unisondb_streamer_v1_streamer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamWalRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamWalRecordsRequest) ProtoMessage() {}

func (x *StreamWalRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_streamer_v1_streamer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamWalRecordsRequest.ProtoReflect.Descriptor instead.
func (*StreamWalRecordsRequest) Descriptor() ([]byte, []int) {
	return file_unisondb_streamer_v1_streamer_proto_rawDescGZIP(), []int{0}
}

func (x *StreamWalRecordsRequest) GetOffset() []byte {
	if x != nil {
		return x.Offset
	}
	return nil
}

type GetLatestOffsetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLatestOffsetRequest) Reset() {
	*x = GetLatestOffsetRequest{}
	mi := &file_unisondb_streamer_v1_streamer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestOffsetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestOffsetRequest) ProtoMessage() {}

func (x *GetLatestOffsetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_streamer_v1_streamer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestOffsetRequest.ProtoReflect.Descriptor instead.
func (*GetLatestOffsetRequest) Descriptor() ([]byte, []int) {
	return file_unisondb_streamer_v1_streamer_proto_rawDescGZIP(), []int{1}
}

type GetLatestOffsetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offset        []byte                 `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLatestOffsetResponse) Reset() {
	*x = GetLatestOffsetResponse{}
	mi := &file_unisondb_streamer_v1_streamer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestOffsetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestOffsetResponse) ProtoMessage() {}

func (x *GetLatestOffsetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_streamer_v1_streamer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestOffsetResponse.ProtoReflect.Descriptor instead.
func (*GetLatestOffsetResponse) Descriptor() ([]byte, []int) {
	return file_unisondb_streamer_v1_streamer_proto_rawDescGZIP(), []int{2}
}

func (x *GetLatestOffsetResponse) GetOffset() []byte {
	if x != nil {
		return x.Offset
	}
	return nil
}

// Server's Response Message (Streaming)
type StreamWalRecordsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A batch of WAL records
	Records         []*WALRecord           `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	ServerTimestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=server_timestamp,json=serverTimestamp,proto3" json:"server_timestamp,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StreamWalRecordsResponse) Reset() {
	*x = StreamWalRecordsResponse{}
	mi := &file_unisondb_streamer_v1_streamer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamWalRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamWalRecordsResponse) ProtoMessage() {}

func (x *StreamWalRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_streamer_v1_streamer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamWalRecordsResponse.ProtoReflect.Descriptor instead.
func (*StreamWalRecordsResponse) Descriptor() ([]byte, []int) {
	return file_unisondb_streamer_v1_streamer_proto_rawDescGZIP(), []int{3}
}

func (x *StreamWalRecordsResponse) GetRecords() []*WALRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *StreamWalRecordsResponse) GetServerTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.ServerTimestamp
	}
	return nil
}

// WAL Record Format
type WALRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offset        []byte                 `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Record        []byte                 `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty"`
	Crc32Checksum uint32                 `protobuf:"fixed32,3,opt,name=crc32_checksum,json=crc32Checksum,proto3" json:"crc32_checksum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WALRecord) Reset() {
	*x = WALRecord{}
	mi := &file_unisondb_streamer_v1_streamer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WALRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WALRecord) ProtoMessage() {}

func (x *WALRecord) ProtoReflect() protoreflect.Message {
	mi := &file_unisondb_streamer_v1_streamer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WALRecord.ProtoReflect.Descriptor instead.
func (*WALRecord) Descriptor() ([]byte, []int) {
	return file_unisondb_streamer_v1_streamer_proto_rawDescGZIP(), []int{4}
}

func (x *WALRecord) GetOffset() []byte {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *WALRecord) GetRecord() []byte {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *WALRecord) GetCrc32Checksum() uint32 {
	if x != nil {
		return x.Crc32Checksum
	}
	return 0
}

var File_unisondb_streamer_v1_streamer_proto protoreflect.FileDescriptor

var file_unisondb_streamer_v1_streamer_proto_rawDesc = string([]byte{
	0x0a, 0x23, 0x75, 0x6e, 0x69, 0x73, 0x6f, 0x6e, 0x64, 0x62, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x75, 0x6e, 0x69, 0x73, 0x6f, 0x6e, 0x64, 0x62, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x17,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x9c, 0x01, 0x0a,
	0x18, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x6e, 0x69,
	0x73, 0x6f, 0x6e, 0x64, 0x62, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x41, 0x4c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x45, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x62, 0x0a, 0x09, 0x57,
	0x41, 0x4c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x63, 0x33,
	0x32, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x07,
	0x52, 0x0d, 0x63, 0x72, 0x63, 0x33, 0x32, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x32,
	0xf9, 0x01, 0x0a, 0x12, 0x57, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x57, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2d, 0x2e, 0x75, 0x6e, 0x69,
	0x73, 0x6f, 0x6e, 0x64, 0x62, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x75, 0x6e, 0x69, 0x73,
	0x6f, 0x6e, 0x64, 0x62, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x6e, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2c,
	0x2e, 0x75, 0x6e, 0x69, 0x73, 0x6f, 0x6e, 0x64, 0x62, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x75,
	0x6e, 0x69, 0x73, 0x6f, 0x6e, 0x64, 0x62, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x4b, 0x5a, 0x49, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x6b, 0x75, 0x72, 0x2d,
	0x61, 0x6e, 0x61, 0x6e, 0x64, 0x2f, 0x75, 0x6e, 0x69, 0x73, 0x6f, 0x6e, 0x64, 0x62, 0x2f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x67, 0x6f, 0x2f, 0x75, 0x6e, 0x69, 0x73, 0x6f, 0x6e, 0x64, 0x62, 0x2f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_unisondb_streamer_v1_streamer_proto_rawDescOnce sync.Once
	file_unisondb_streamer_v1_streamer_proto_rawDescData []byte
)

func file_unisondb_streamer_v1_streamer_proto_rawDescGZIP() []byte {
	file_unisondb_streamer_v1_streamer_proto_rawDescOnce.Do(func() {
		file_unisondb_streamer_v1_streamer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_unisondb_streamer_v1_streamer_proto_rawDesc), len(file_unisondb_streamer_v1_streamer_proto_rawDesc)))
	})
	return file_unisondb_streamer_v1_streamer_proto_rawDescData
}

var file_unisondb_streamer_v1_streamer_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_unisondb_streamer_v1_streamer_proto_goTypes = []any{
	(*StreamWalRecordsRequest)(nil),  // 0: unisondb.streamer.v1.StreamWalRecordsRequest
	(*GetLatestOffsetRequest)(nil),   // 1: unisondb.streamer.v1.GetLatestOffsetRequest
	(*GetLatestOffsetResponse)(nil),  // 2: unisondb.streamer.v1.GetLatestOffsetResponse
	(*StreamWalRecordsResponse)(nil), // 3: unisondb.streamer.v1.StreamWalRecordsResponse
	(*WALRecord)(nil),                // 4: unisondb.streamer.v1.WALRecord
	(*timestamppb.Timestamp)(nil),    // 5: google.protobuf.Timestamp
}
var file_unisondb_streamer_v1_streamer_proto_depIdxs = []int32{
	4, // 0: unisondb.streamer.v1.StreamWalRecordsResponse.records:type_name -> unisondb.streamer.v1.WALRecord
	5, // 1: unisondb.streamer.v1.StreamWalRecordsResponse.server_timestamp:type_name -> google.protobuf.Timestamp
	0, // 2: unisondb.streamer.v1.WalStreamerService.StreamWalRecords:input_type -> unisondb.streamer.v1.StreamWalRecordsRequest
	1, // 3: unisondb.streamer.v1.WalStreamerService.GetLatestOffset:input_type -> unisondb.streamer.v1.GetLatestOffsetRequest
	3, // 4: unisondb.streamer.v1.WalStreamerService.StreamWalRecords:output_type -> unisondb.streamer.v1.StreamWalRecordsResponse
	2, // 5: unisondb.streamer.v1.WalStreamerService.GetLatestOffset:output_type -> unisondb.streamer.v1.GetLatestOffsetResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_unisondb_streamer_v1_streamer_proto_init() }
func file_unisondb_streamer_v1_streamer_proto_init() {
	if File_unisondb_streamer_v1_streamer_proto != nil {
		return
	}
	file_unisondb_streamer_v1_streamer_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_unisondb_streamer_v1_streamer_proto_rawDesc), len(file_unisondb_streamer_v1_streamer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_unisondb_streamer_v1_streamer_proto_goTypes,
		DependencyIndexes: file_unisondb_streamer_v1_streamer_proto_depIdxs,
		MessageInfos:      file_unisondb_streamer_v1_streamer_proto_msgTypes,
	}.Build()
	File_unisondb_streamer_v1_streamer_proto = out.File
	file_unisondb_streamer_v1_streamer_proto_goTypes = nil
	file_unisondb_streamer_v1_streamer_proto_depIdxs = nil
}
